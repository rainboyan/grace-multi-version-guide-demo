buildscript {
    repositories {
        // mavenLocal()
        mavenCentral()
        // maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.gradle.org/gradle/libs-releases" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.github.gradle-nexus:publish-plugin:2.0.0"
        classpath "org.graceframework:grace-gradle-plugin:$graceVersion"
    }
}

group "grace.demos"
version projectVersion

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "groovy"
apply plugin: "io.github.gradle-nexus.publish-plugin"
apply from: 'gradle/docs.gradle'

repositories {
    // mavenLocal()
    mavenCentral()
    // maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    developmentOnly
}

dependencies {
    implementation "org.apache.groovy:groovy:$groovyVersion"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

nexusPublishing {
    repositories {
        sonatype {
            def ossUser = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
            def ossPass = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
            def ossStagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID") ?: project.hasProperty("sonatypeOssStagingProfileId") ? project.sonatypeOssStagingProfileId : ''
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = ossUser
            password = ossPass
            stagingProfileId = ossStagingProfileId
        }
    }
}
